{
    "contents" : "\n---\ntitle: \"CodeBook.md\"\nauthor: \"B.S. Comer\"\ndate: \"06/20/2015\"\noutput: html_document\n---\n\n#Codebook for run_analysis.R\n\n##Function of run_analysis.R: \nTo generate a tidy data set containing mean and standard deviation variables \nHuman Activity Recognition Data set available from the University of California\nIrvine Machine Learning Repository. Final data set is mean_results_summary. \nMean_results_summary contains averages of mean and standard deviation variables by \nsubject and activity.  Exported text file contains mean_results_summary data table and is\nlabeled tidy_data.txt in the working directory.\n\n\n##Data Source URL: \n<https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip> \n\n##Additional information on data available at the following url: \n\n<http://archive.ics.uci.edu/ml/datasets/Human+Activity+Recognition+Using+Smartphones> \n\n##Additional information also provided in readme.txt provided with the original data set from UCI.\n\n##Brief Description of the Data:\nData recorded by embedded accelerometers (3-axial linear acceleration) and \ngyroscopes (3-axial angular velocity) in smartphones (Samsung Galaxy S II) worn \non the the waist by 30 subjects (age range 19-48 years old) performing six \nactivities (WALKING, WALKING_UPSTAIRS, WALKING_DOWNSTAIRS, SITTING, STANDING, \nLAYING).  The source data was provided randomly divided into two subsets: \nTraining data (70% of data) and Test data (30% of data). Data provided from \nsource includes the raw data and processed data. Data were processed as \ndescribed feature_info.txt, which is provided with the original data set.  Raw \ninertia data is provided in subdirectories in \n/UCI HAR Dataset/test/Inertia Signals and /UCI Har Dataset/train/Inertia Signals\nbut this is not required for run_analysis.R data transformation.\n\n##Required data directory structure:\nSource data must be downloaded and extracted as provided into the working \ndirectory of R.  Required folder structure (in Unix directory format):\n\n./UCI HAR Dataset/\n./UCI HAR Dataset/test\n./UCI HAR Dataset/train\n\n##Required Packages:\n\"gtools\"\n\"dplyr\"\n\n\n##Variables:\nVariables are estimates of the the following signals:\n\n- tBodyAcc-XYZ\n- tGravityAcc-XYZ\n- tBodyAccJerk-XYZ\n- tBodyGyro-XYZ\n- tBodyGyroJerk-XYZ\n- tBodyAccMag\n- tGravityAccMag\n- tBodyAccJerkMag\n- tBodyGyroMag\n- tBodyGyroJerkMag\n- fBodyAcc-XYZ\n- fBodyAccJerk-XYZ\n- fBodyGyro-XYZ\n- fBodyAccMag\n- fBodyAccJerkMag\n- fBodyGyroMag\n- fBodyGyroJerkMag\n\nTwo prefixes are used in labels: \n\n- \"t-\" denotes a time domain signal\n- \"f-\" denotes a frequency domain signal\n\nVariables in final data set, mean_results_summary, are means of either mean or standard deviation(std) for each subject and activity as indicated by column label in clean_data.  clean_data contains the subset of mean and standard deviations (std) contained in the original data set.\n\n\n##Variables included in source data are listed below:\n\nNote: Variables were named using the following scheme: \n\n* signal prefix-descriptive statistic stem-directional suffix (when appropriate)\n\nAn example of a variable name is as follows: \n\n* \"tBodyAcc-mean()-X\" in original data set \n* \"tBodyAcc.mean().X\" in data table generated by run_analysis.R.\n\n- mean(): Mean value\n- std(): Standard deviation\n- mad(): Median absolute deviation \n- max(): Largest value in array\n- min(): Smallest value in array\n- sma(): Signal magnitude area\n- energy(): Energy measure. Sum of the squares divided by the number of values. \n- iqr(): Interquartile range \n- entropy(): Signal entropy\n- arCoeff(): Autorregresion coefficients with Burg order equal to 4\n- correlation(): correlation coefficient between two signals\n- maxInds(): index of the frequency component with largest magnitude\n- meanFreq(): Weighted average of the frequency components to obtain a mean \n- frequency\n\n- skewness(): skewness of the frequency domain signal \n- kurtosis(): kurtosis of the frequency domain signal \n- bandsEnergy(): Energy of a frequency interval within the 64 bins of the FFT of each window.\n- angle(): Angle between to vectors.\n\nNote: These descriptions were exported from the description files provided\nwith the original data set.All original variables were not included in the data \ntable generated by run_analysis.R.  Final data table only includes mean() and \nstd() variables.\n\n##Transformations:\n\n1. Reading data (measurements, variable information, subject information, and \nactivity information) into R and merging training and test sets.\n    a. Data read into R using read.table()\n        i. X_train<-training data set\n        ii. subject_train<-training set subject information\n        iii. y_train<-training set activity information\n        iv. X_test<-test data set\n        v.subject_test<-test set subject information\n        vi. y_test<-test set activity information\n    b. Data tables merged using rbind()\n        i. merged_data<- Merged training and test data sets\n        ii. merged_subject<- Merged training and test set subject information\n        iii. merged_activity <- Merged training and test set activity information\n2. Extracting mean and standard deviation measurements. \n   * Note: Requires package \"gtools\"\n    a. Generate index of columns containing mean and standard deviations\n        i. grep() to index columns containing \"mean()\" as mean_index\n        ii. grep() to index columns containing \"std()\" as std_index\n        iii. mixedsort() - (from gtools package) to concatenate mean_index\n\t\t\tand std_index as feature_index\n    b. Subset mean and std columns using feature_index as indexing reference\n      i. Yields mean_std_subset data table\n3. Add descriptive data labels to data table and labels data set appropriately\n    a. Add empty second column for activity labels to merged_activity index \n        table\n    b. Add activity labels to merged_activity index table in column 2\n    c. Use cbind() to merge column 2 from merged_activity with mean_std_subset\n      i. Yields activities_mean_std_subset table\n    d. Use colnames() to subset column names as good_syntax\n    e. Use make.names() to correct syntax in good_syntax\n    f. Create index of activity labels from dataset_features called \n                indexed_activity_label\n    g. Create a vector called activity_label_index_vector of descriptive \t\n                activity labels using as.vector() and indexed_activity_label \n                column 2 \n    h. Added \"Activity\" label to head of activity_label_index_vector using \n                c() and named resulting vector updated_activity_label_index_vector\n    i. Used colnames() and updated_activity_label_index_vector to rename \t\t\n                columns with descriptive labels for activities and statistic \n                variable labels\n    j. Used cbind() to merge subject information to data table called \t\t\n                clean_data containing activities and statistic variable labels \t\t\t\n                using merged_subject index and activities_mean_std_subset data \t\t\n                table.\n    k. Add heading \"Subject\" to column V1 of clean_data using colNames().\n4. Generate data table with average of each variable and each subject and export that data table as the text               \n        file tidy_data.txt in working directory. \n   * Note requires package \"dplyr\"\n    a. Use ddplyr to split the data table by the variables \"subject\" and \"activity\", and apply the         \n                function numcolwise(mean) to generate mean_results_summary\n    b. Use write.table() to export mean_results_summary as tidy_data.txt in working directory\n        i. row.names=FALSE\n        ii. sep = \" \" is default argument and thus not listed in code\n    c. Use view() to output data table to R for researcher to view on screen.\n\t\n\t\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1434897484121.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1170520299",
    "id" : "697AAC65",
    "lastKnownWriteTime" : 1434909609,
    "path" : "~/Desktop/Link to Coursera/Data_science/getting_cleaning_data/Project data set/programming_assignment/CodeBook.md",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "markdown"
}